using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.Serialization;
using System.Text.RegularExpressions;
using System.Text;
using System;

class Result
{

    /*
     * Complete the 'kaprekarNumbers' function below.
     *
     * The function accepts following parameters:
     *  1. INTEGER p
     *  2. INTEGER q
     */

    public static void kaprekarNumbers(int p, int q)
    {
        List<int> kaprekarList = new List<int>();

        for (int n = p; n <= q; n++)
        {
            long square = (long)n * n;
            string strSq = square.ToString();
            int d = n.ToString().Length;

            string rightStr = strSq.Substring(Math.Max(0, strSq.Length - d));
            string leftStr = strSq.Substring(0, Math.Max(0, strSq.Length - d));

            long right = string.IsNullOrEmpty(rightStr) ? 0 : long.Parse(rightStr);
            long left = string.IsNullOrEmpty(leftStr) ? 0 : long.Parse(leftStr);

            if (left + right == n)
            {
                kaprekarList.Add(n);
            }
        }

        if (kaprekarList.Count == 0)
        {
            Console.WriteLine("INVALID RANGE");
        }
        else
        {
            Console.WriteLine(string.Join(" ", kaprekarList));
        }

    }

}

class Solution
{
    public static void Main(string[] args)
    {
        int p = Convert.ToInt32(Console.ReadLine().Trim());

        int q = Convert.ToInt32(Console.ReadLine().Trim());

        Result.kaprekarNumbers(p, q);
    }
}
